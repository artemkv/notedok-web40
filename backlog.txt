V1.0

- --When the page opens, load all the notes (in batches of 1000)--
- --Show all the notes in the list, title is derived from filename--
- --The note list is only shown when the browser window is wide enough; otherwise it is hidden--
- --If title is empty, show "No title" placeholder--
- --Sort notes alphabetically (case-insensitive), notes without title first--
- --Show note counter on top of the note list--
- --Search textbox filters the notes immediately as you type--
- --The filtering is by the title, case insensitive; should include every token from the search text--
- --You can select a note in the list--
- --When you select a note, the editor loads the note content--
- --While loading, you see the progress bar--
- --Once loaded, the editor shows the note title and note text, rendered as markdown--
- --Title is immediately editable--
- --Title placeholder for an existing note is "No title"--
- --Text (markdown) is initially read-only--
- --If editor fails to initialize, it shows error instead of text--
- --After you update title, note is renamed with the new filename derived from the new path--
- --To update the title, you either submit by pressing enter or just move away from the input--
- --While renaming, the note is shown (with new title) as pending change in the list (orbit progress indicator)--
- --While renaming, title becomes read-only--
- --While renaming, only button New is visible--
- --Once renamed, the note goes back to it's default state--
- --If you press Esc while editing the title, it resets back to previous value--
- --By default, only buttons New, Edit, Delete are visible--
- --To make text editable, you press Edit--
- --If editor fails to initialize, it switches to the plain text mode--
- --If editor initializes correctly, a user can switch between markdown and plain text mode editing at any time, preserving the unsaved changes--
- --When text becomes editable, only buttons New, Save and Cancel are available--
- --If you press Cancel, the text goes back to read-only; all the edits are lost--
- --To save edits in the text, you need to click Save--
- --While saving text, the note is shown as pending change in the list (orbit progress indicator)--
- --Once clicked save, text becomes read-only--
- --While saving text, only button New is visible--
- --While saving text, title becomes read-only--
- --Once text is saved, the note goes back to it's default state--
- --If you select a different note with some changes in title, the title is saved, while you are moving to a different note--
- --The editor buttons' availability depends on that new selected note--
- --If you move to a different note with some changes in text, without saving, the changes are lost--
- --When New button is clicked, the new note is created in UI--
- --The new note is shown in the beginning of the list, with placeholder title "New note"--
- --Title placeholder for a new note is "New title"--
- --Editing the note works the same as editing an existing note--
- --Once changes are saved, the note stays in the beginning of the list--
- --When you press Delete button, the note is shown as deleted (strike through) and pending change in the list--
- --While deleting, only button New is visible--
- --While deleting, title becomes read-only and shown as strike through--
- --While deleting, text is shown in a very light grey--
- --You can move to any other note--
- --Once deleted, the note is no longer pending, the title and the text are shown in the same way as when deleting--
- --When deleted note is selected, only buttons New and Restore are available--
- --When you press Restore button, the note is shown as pending, but still as deleted--
- --While restoring, only button New is visible--
- --Once restored, the note goes back to it's default state--
- --When pending sync with backend, show orbit indicator instead of buttons--

- --If the note is plain text, it has a small marker ".txt" next to it in the note list (in place of orbit indicator)--
- --When orbit indicator is visible, it replaces the marker--
- --If the note is plain text, it is converted to HTML and rendered as in the legacy version--
- --When you go into editing, instead of markdown editor, you have text area--
- --The rest works the same--
- --Show plain text note visually as deleted when appropriate--
- --Notes in plain text can be converted to markdown (rename + reformat)--

--- Error handling

- --If note fails to load, show error and allow to retry. Re-selecting the note again also retries--

- --If note fails to rename, show error indicator in the list and the error in the editor--
- --While in "failed to rename" state, only button New is visible, title and text are read-only--
- --If you discard the error, the note moves to the default state, the editor loses changes--
- --You can also retry, in which case note goes to renaming again--

- --If note fails to save text, show error indicator in the list and the error in the editor--
- --While in "failed to save text" state, only button New is visible, title and text are read-only--
- --If you discard the error, the note moves to the default state, the editor loses changes--
- --You can also retry, in which case note goes to saving text again--

- --If note fails to delete, show error indicator in the list and the error in the editor--
- --While in "failed to delete" state, only button New is visible, title and text are read-only--
- --If you discard the error, the note moves to the default state, as if delete didn't happen--
- --You can also retry, in which case note goes to deleting again--

- --If note fails to restore, show error indicator in the list and the error in the editor--
- --While in "failed to restore" state, only button New is visible, the note is shown as if deleted in the list and the editor--
- --If you discard the error, the note moves back to deleted state--
- --You can also retry, in which case note goes to restoring again--

- --If note fails to create from title, show error indicator in the list and the error in the editor--
- --While in "failed to create" state, only button New is visible, title and text are read-only--
- --If you discard the error, the note moves to back to new, the editor loses changes--
- --You can also retry, in which case note goes to creating again--

- --If note fails to create from text, show error indicator in the list and the error in the editor--
- --While in "failed to create" state, only button New is visible, title and text are read-only--
- --If you discard the error, the note moves to back to new, the editor loses changes--
- --You can also retry, in which case note goes to creating again--

---

V 1.3 Saving draft:

- --When you start editing note, the editor reports current state every 5 seconds--
- --If there are changes, this triggers command that saves those changes into the local storage--
- --(If there are no changes, previously saved draft is removed from local storage)--
- --The note item in the list indicates unsaved changes using a dot--
- --If you save or cancel changes, the current state is cleared from local storage--
- --In that case, the note item in the list loses the "unsaved changes" mark--
- --Editor goes back to read-only, and, if you clicked cancel, all of the edits are lost--
- --If you close the window, and open it again, this is one of the scenarios where draft would prevent losing changes--
- --Note list loads, and all the notes that have unsaved changes stored locally show "unsaved changes" mark--
- --If you select such a note, it loads from backend and is combined with changes from the local storage--
- --The editor shows the most recent unsaved changes version--
- --The editor also shows "unsaved draft" in the header--
- --You can discard those unsaved changes, without editing--
- --But it you start editing, you continue with the most recent unsaved changes--
- --This should work both in text mode and markdown mode--
- --This should work for existing note or new note (so new note should be shown in the list even if not saved)--
- --Another scenario is switching to another note while editing, in which case going back to a note should work the same--
- --Reporting the most recent changes every 3 seconds should not affect an open and active editor--
- --Unsaved changes are preserved if the note is renamed. In that case, the unsaved changes should be re-connected with the renamed note--
- --As soon as you request to delete a note, all the unsaved changes are lost--
- --Draft is also deleted when you create a new note by editing a title--
- --When note has draft, option to convert to markdown is not available--

---

V 1.4 Allow creating text notes

- --New button splits into Text and Markdown--
- --Update event to carry that information to business--
- --Add the property on new note model--
- --Business initializes it from the event--
- --When command is triggered to create note from text or title, it uses the flag--
- --New note should be recognized by the editor to be in a correct format--
- --Draft should remember the format it was saved in--

Lower priority
- Allow conversion to text from markdown (content stays as is, only for existing note)
- Re-think how the format is indicated in UI


Later versions:

- make layout responsive and shown correctly on mobile
- use ems/rems?
- make sure UI is accessible with keyboard
- some note text doesn't wrap when browser width gets smaller (ai_general_methods). See why
- bring back autosuggest (and consider react-friendly library, but only if it is worth it)
- editor panel with buttons for formatting
- sign out
- title field autocompletes by chrome, it's annoying
- auto-save draft every 3 seconds, if there are changes
- auto-focus on title when note selected? not sure
- auto-focus on text when edit is clicked? (doesn't seem to be easy or possible)
- re-order notes when filtering
- show recent notes in their own section when more than 10 notes visible, ordered by date, latest first
- show new notes in their own section
- maybe tags could be in blue in the note list titles?
- otherwise, maybe parts of the text that match the search could be in blue
- try to keep unsaved changes when error happened saving them, but then was discarded by user. Go back to edit instead?
- convert markdown back to text (what to do with formatting?)?
- allow to create notes in .txt or .md?

Not sure if possible:

- Text placeholder for an existing and new note is "No text"
- You can cancel md editing by clicking `Esc`